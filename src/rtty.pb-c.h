/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: rtty.proto */

#ifndef PROTOBUF_C_rtty_2eproto__INCLUDED
#define PROTOBUF_C_rtty_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _RttyMessage RttyMessage;
typedef struct _RttyMessage__Data RttyMessage__Data;


/* --- enums --- */

typedef enum _RttyMessageType {
  RTTY_MESSAGE_TYPE__LOGIN = 1,
  RTTY_MESSAGE_TYPE__LOGINACK = 2,
  RTTY_MESSAGE_TYPE__LOGOUT = 3,
  RTTY_MESSAGE_TYPE__TTY = 4,
  RTTY_MESSAGE_TYPE__ANNOUNCE = 5,
  RTTY_MESSAGE_TYPE__UPFILE = 6,
  RTTY_MESSAGE_TYPE__DOWNFILE = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RTTY_MESSAGE_TYPE)
} RttyMessageType;

/* --- messages --- */

struct  _RttyMessage__Data
{
  ProtobufCMessage base;
  protobuf_c_boolean has_code;
  int32_t code;
  protobuf_c_boolean has_data;
  ProtobufCBinaryData data;
  char *name;
  protobuf_c_boolean has_size;
  uint32_t size;
};
#define RTTY_MESSAGE__DATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rtty_message__data__descriptor) \
    , 0,0, 0,{0,NULL}, NULL, 0,0 }


struct  _RttyMessage
{
  ProtobufCMessage base;
  /*
   * byte0[0-3]: version, byte0[4-7]: message type
   */
  uint32_t header;
  /*
   * session id
   */
  char *sid;
};
#define RTTY_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rtty_message__descriptor) \
    , 0, NULL }


/* RttyMessage__Data methods */
void   rtty_message__data__init
                     (RttyMessage__Data         *message);
/* RttyMessage methods */
void   rtty_message__init
                     (RttyMessage         *message);
size_t rtty_message__get_packed_size
                     (const RttyMessage   *message);
size_t rtty_message__pack
                     (const RttyMessage   *message,
                      uint8_t             *out);
size_t rtty_message__pack_to_buffer
                     (const RttyMessage   *message,
                      ProtobufCBuffer     *buffer);
RttyMessage *
       rtty_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rtty_message__free_unpacked
                     (RttyMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*RttyMessage__Data_Closure)
                 (const RttyMessage__Data *message,
                  void *closure_data);
typedef void (*RttyMessage_Closure)
                 (const RttyMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    rtty_message_type__descriptor;
extern const ProtobufCMessageDescriptor rtty_message__descriptor;
extern const ProtobufCMessageDescriptor rtty_message__data__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_rtty_2eproto__INCLUDED */
